name: AWS EC2 Deploy
on: [workflow_dispatch]

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Install and configure Doppler
      working-directory: ./aws/ec2
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 379CE192D401AB61
        echo "deb https://dl.bintray.com/dopplerhq/doppler-deb stable main" | sudo tee /etc/apt/sources.list.d/dopplerhq-doppler.list
        sudo apt-get update && sudo apt-get install doppler
        doppler --version
        doppler enclave setup --no-prompt --token ${{ secrets.DOPPLER_AWS_TERRAFORM_SERVICE_TOKEN }}

    - name: Terraform init    
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./aws/ec2
      run: terraform init --upgrade -input=false

    - name: Configure Terraform using Doppler
      working-directory: ./aws/ec2
      run: |
        doppler run -- sh -c 'echo vpc_id = \"$VPC_ID\"' >> terraform.tfvars
        doppler run -- sh -c 'echo subnet_id = \"$SUBNET_ID\"' >> terraform.tfvars
        doppler run -- sh -c 'echo region = \"$REGION\"' >> terraform.tfvars
        doppler run -- sh -c 'echo key_name = \"$KEY_NAME\"' >> terraform.tfvars
        doppler run -- sh -c 'echo cloudflare_email = \"$CLOUDFLARE_EMAIL\"' >> terraform.tfvars
        doppler run -- sh -c 'echo cloudflare_api_key = \"$CLOUDFLARE_API_KEY\"' >> terraform.tfvars
        doppler run -- sh -c 'echo cloudflare_zone_id = \"$CLOUDFLARE_ZONE_ID\"' >> terraform.tfvars
        doppler run -- sh -c 'echo doppler_service_token = \"$DOPPLER_AWS_APP_SERVICE_TOKEN\"' >> terraform.tfvars

    - name: Terraform validation
      working-directory: ./aws/ec2
      run: terraform validate

    - name: Terraform apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./aws/ec2
      run: |
        terraform apply -var-file terraform.tfvars -var git_sha=$GITHUB_SHA -auto-approve
